#!/bin/sh
#
# Name:        Program 1 - stats
# Author:      Scott Milton
# Date:        4/13/15
# Description: This shell script will... 
#
# general format for command is
# stats {-rows | cols} [input_file]

# check for presence of args
# validate them
# open file if name given

# temporary dummy variable to be replaced by command line option (rows or cols)
option='r'

# get process id for this program
# TMP=ps$$

# set up trap to catch interrupt, hangup, and terminate signals and remove
# the temp file if program terminates unexpectedly (from intro to linux lecture)
trap "rm -f $TMP_$$; exit 1" INT HUP TERM

# cat < file

# prompt user for input
echo -e '\nEnter any number of integers separated by spaces.'
echo 'Push <ctrl> + d when finished.'

# get user input and store it in temp file with process id in name
# I found help here:
# stackoverflow.com/questions/10568473/redirect-bash-output-to-dynamic-file-name
cat > $TMP_$$

# output contents of temp file to stdout, followed by a newline
echo -e '\n'
cat $TMP_$$

if [ $option == 'r' ]
then
  printf '\nAverage Median'
elif [ $option == 'c' ]
then
  printf '\nAverages:'
  printf 'Medians:\n'
else
  printf '\nUsage: stats {-rows|-cols} [file]'
fi

printf '\n'

# remove the temp file and exit normally
rm -f $TMP_$$
exit 0
